function Enemy.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push constant 200
pop this 0
push constant 0
pop this 1
push constant 3
pop this 3
push constant 510
pop this 2
push pointer 0
return
function Enemy.deAllocEnemy 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Enemy.drawEnemy 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Enemy.drawShape 1
pop temp 0
push constant 0
return
function Enemy.eraseEnemy 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Enemy.drawShape 1
pop temp 0
push constant 0
return
function Enemy.drawShape 0
push argument 0
pop pointer 0
push this 0
push this 3
push constant 1
call Math.multiply 2
add
push this 1
push this 3
push constant 1
call Math.multiply 2
add
push this 0
push this 3
push constant 6
call Math.multiply 2
add
push this 1
push this 3
push constant 3
call Math.multiply 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 3
push constant 0
call Math.multiply 2
add
push this 1
push this 3
push constant 0
call Math.multiply 2
add
push this 0
push this 3
push constant 1
call Math.multiply 2
add
push this 1
push this 3
push constant 2
call Math.multiply 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 3
push constant 6
call Math.multiply 2
add
push this 1
push this 3
push constant 0
call Math.multiply 2
add
push this 0
push this 3
push constant 7
call Math.multiply 2
add
push this 1
push this 3
push constant 2
call Math.multiply 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 3
push constant 3
call Math.multiply 2
add
push this 1
push this 3
push constant 0
call Math.multiply 2
add
push this 0
push this 3
push constant 4
call Math.multiply 2
add
push this 1
push this 3
push constant 4
call Math.multiply 2
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Enemy.isHit 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 0
push argument 1
lt
push argument 1
push this 0
push this 3
push constant 7
call Math.multiply 2
add
lt
and
push this 1
push this 3
push constant 4
call Math.multiply 2
add
push argument 2
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 0
label IF_FALSE0
push local 0
return
function Enemy.moveEnemy 0
push argument 0
pop pointer 0
push pointer 0
call Enemy.eraseEnemy 1
pop temp 0
push this 1
push constant 1
add
push constant 210
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push constant 1
add
pop this 1
push pointer 0
call Enemy.drawEnemy 1
pop temp 0
goto IF_END0
label IF_FALSE0
push pointer 0
call Enemy.killEnemy 1
pop temp 0
label IF_END0
push constant 0
return
function Enemy.killEnemy 0
push argument 0
pop pointer 0
push pointer 0
call Enemy.eraseEnemy 1
pop temp 0
push pointer 0
call Enemy.generateRandomPlace 1
pop temp 0
push constant 0
pop this 1
push constant 0
return
function Enemy.generateRandomPlace 0
push argument 0
pop pointer 0
push this 1
push this 2
push constant 2
add
push constant 4
call Math.divide 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push this 1
sub
push constant 1
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push this 1
sub
pop this 0
goto IF_END1
label IF_FALSE1
push this 0
push this 1
add
pop this 0
label IF_END1
goto IF_END0
label IF_FALSE0
push this 0
push this 1
add
push this 2
push constant 9
sub
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push this 1
add
pop this 0
goto IF_END2
label IF_FALSE2
push this 0
push this 1
sub
pop this 0
label IF_END2
push this 2
push this 1
sub
pop this 0
label IF_END0
push constant 0
return
