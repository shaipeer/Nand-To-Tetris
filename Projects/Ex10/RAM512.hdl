// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
	
	//INPUT
	DMux8Way(in=load, sel = address[6..8], 
			 a = loadDMux8A, b = loadDMux8B, c = loadDMux8C, d = loadDMux8D,
			 e = loadDMux8E, f = loadDMux8F, g = loadDMux8G, h = loadDMux8H);
	
	//RAM64
	RAM64(in = in, load = loadDMux8A, address = address[0..5], out = Ram64OutA);
	RAM64(in = in, load = loadDMux8B, address = address[0..5], out = Ram64OutB);
	RAM64(in = in, load = loadDMux8C, address = address[0..5], out = Ram64OutC);
	RAM64(in = in, load = loadDMux8D, address = address[0..5], out = Ram64OutD);
	RAM64(in = in, load = loadDMux8E, address = address[0..5], out = Ram64OutE);
	RAM64(in = in, load = loadDMux8F, address = address[0..5], out = Ram64OutF);
	RAM64(in = in, load = loadDMux8G, address = address[0..5], out = Ram64OutG);
	RAM64(in = in, load = loadDMux8H, address = address[0..5], out = Ram64OutH);
	
	//OUTPUT
	Mux8Way16(a = Ram64OutA, b = Ram64OutB, c = Ram64OutC, d = Ram64OutD,
			  e = Ram64OutE, f = Ram64OutF, g = Ram64OutG, h = Ram64OutH,
			  sel = address[6..8], out = out);	
}
