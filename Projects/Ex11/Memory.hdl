// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the computer's memory,
 * including RAM and memory mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: If load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output in the next time step.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000–0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    
	//INPUT
	DMux4Way (in = load, sel = address[13..14], a = loadDMux4A, b = loadDMux4B, c = loadDMux4C, d = loadDMux4D);	//d not used

	//DATA MEMORY
	RAM16K (in = in, load = loadDMux4A, out = ram16outputA, address = address[0..13]);
	RAM16K (in = in, load = loadDMux4B, out = ram16outputB, address = address[0..13]);
	
	Screen (in = in, load = loadDMux4C, out = screenOutput, address = address[0..12]);
	Keyboard (out = keyboardOutput);

	//OUTPUT
	Mux4Way16 (a = ram16outputA, b = ram16outputB, c = screenOutput, d = keyboardOutput, sel = address[13..14], out = out);
	
}
